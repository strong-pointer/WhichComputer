@using WhichComputer.Main
@model string
@{
    ViewData["Title"] = "More Info";
    string jsonCurrComputer = TempData[Model] as string;
    Computer currComputer = Newtonsoft.Json.JsonConvert.DeserializeObject<Computer>(jsonCurrComputer);

    var id = "a" + Guid.NewGuid().ToString("N").Substring(0, 10);
    var loader = ViewData["CompLoader"] as WhichComputer.Main.ComputerLoader;
    var amzFetcher = new WhichComputer.Main.AmazonComputerResultHandler(loader);
    var bbFetcher = new WhichComputer.Main.BestBuyResultHandler(loader);
    Dictionary<string, WhichComputer.Main.ComputerResult> ServiceToResult = new();

    WhichComputer.Main.ComputerResult GetProdInfo(string service)
    {
        // Service already called, just return cached info
        if (ServiceToResult.ContainsKey(service))
        {
            // return existing computer result;; no need to fetch again
            return ServiceToResult[service];
        }
        // Service not yet called, fill out with new ComputerResult
        else
        {
            ComputerResult newCompResult;

            // Fetch the info from the service and add it to the new result
            switch (service)
            {
                case "Amazon":
                    newCompResult = amzFetcher.Fetch(currComputer, false, 1).First();
                    break;
                case "Best Buy":
                    newCompResult = bbFetcher.Fetch(currComputer, false, 1).First();
                    break;
                default:
                    newCompResult = new ComputerResult();
                    break;
            }


            // Add to map and return that new result
            ServiceToResult[service] = newCompResult;
            return newCompResult;
        }
    }
}

<div class="computer-card h-full opacity-75 transition ease-in-out hover:opacity-100 hover:scale-105">
    <div class="m-8 h-full max-w-lg p-6 bg-white border border-gray-200 rounded-lg shadow dark:bg-gray-800 dark:border-gray-700 m-auto">
        <div id="@id" class="h-56">
            <h5 id="BrandAndDesc" class="pb-4 mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white text-center">@currComputer.Name</h5>
            <p class="text-sm dark:text-white pb-3">Brand: @currComputer.Brand<br/><br/>@currComputer.Description </p>
        </div>
        <button class="dark:text-emerald-300 block mx-auto" data-accordion-target="#@id-body" aria-controls="@id-body" aria-expanded="false">See more</button>
        <div id="@id-body" class="hidden mt-6" aria-labelledby="@id">
            <h5 id="Options" class="pb-4 mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white text-left">Features:</h5>

            <div class="relative overflow-x-auto">
                <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">

                    <tbody>
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                        <th scope="row" class="px-6 py-4">
                            Operating System
                        </th>
                        <th scope="row" class="px-6 py-4">
                            @currComputer.Specs.OS
                        </th>
                    </tr>
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                        <td class="px-6 py-4">
                            Weight (lbs)
                        </td>
                        <td class="px-6 py-4">
                            @currComputer.Specs.Weight
                        </td>
                    </tr>
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                        <td class="px-6 py-4">
                            Screen Resolution
                        </td>
                        <td class="px-6 py-4">
                            @currComputer.Specs.Resolution
                        </td>
                    </tr>
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                        <td class="px-6 py-4">
                            Screen Size (in)
                        </td>
                        <td class="px-6 py-4">
                            @currComputer.Specs.Screen
                        </td>
                    </tr>
                    <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                        <td class="px-6 py-4">
                            Ports
                        </td>
                        <td class="px-6 py-4">
                            @currComputer.Specs.Ports
                        </td>
                    </tr>
                    </tbody>


                </table>
            </div>

            <br/>
            <h5 id="Options" class="pb-4 mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white text-left">Options:</h5>

            <div class="relative overflow-x-auto">
                <table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
                    <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr>
                        <th scope="col" class="px-6 py-3">
                            Storage (GB)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Memory (GB)
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Processor
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Graphics
                        </th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var specOptions in currComputer.Specs.Options)
                    {
                        <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                            <th scope="row" class="px-6 py-4">
                                @specOptions.Storage
                            </th>
                            <td class="px-6 py-4">
                                @specOptions.RAM
                            </td>
                            <td class="px-6 py-4">
                                @specOptions.Processor
                            </td>
                            @if (!string.IsNullOrEmpty(specOptions.Graphics))
                            {
                                <td class="px-6 py-4">
                                    @specOptions.Graphics
                                </td>
                            }
                            else
                            {
                                <td class="px-6 py-4">
                                    N/A
                                </td>
                            }
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
            <p>

            <br/>
            <h5 id="WhereToBuy" class="pb-4 mb-2 text-xl font-bold tracking-tight text-gray-900 dark:text-white text-left">Where To Buy:</h5>
            <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
                <table class="w-full border-spacing-0 text-xl text-center text-blue-100 dark:text-blue-100">
                    @foreach (var purchaseOptions in currComputer.AvailableFrom)
                        {
                            <tbody>
                            <tr>
                                <th scope="row" class="px-6 py-4 font-large text-white whitespace-nowrap dark:text-blue-100">
                                    @purchaseOptions

                                    @if (string.Equals(purchaseOptions, "Amazon", StringComparison.OrdinalIgnoreCase))
                                    {
                                        @GetProdInfo(purchaseOptions).Price
                                    }
                                    else if (string.Equals(purchaseOptions, "Best Buy", StringComparison.OrdinalIgnoreCase))
                                    {
                                        @GetProdInfo(purchaseOptions).Price
                                    }
                                </th>
                            </tr>
                            </tbody>
                        }
                </table>
            </div>
        </div>

    </div>
</div>